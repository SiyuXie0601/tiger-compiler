Terminals which are not used

   COMMA
   LBRACE
   RBRACE
   DOT


Grammar

    0 $accept: program $end

    1 program: exp

    2 exp: INT
    3    | STRING
    4    | lvalue
    5    | LPAREN expseq RPAREN
    6    | MINUS exp
    7    | IF exp THEN exp
    8    | IF exp THEN exp ELSE exp
    9    | WHILE exp DO exp
   10    | FOR id ASSIGN exp TO exp DO exp
   11    | LET decs IN expseq END
   12    | id LBRACK exp RBRACK OF exp
   13    | exp TIMES exp
   14    | exp DIVIDE exp
   15    | exp PLUS exp
   16    | exp MINUS exp
   17    | exp EQ exp
   18    | exp NEQ exp
   19    | exp LT exp
   20    | exp LE exp
   21    | exp GT exp
   22    | exp GE exp
   23    | exp AND exp
   24    | exp OR exp
   25    | lvalue ASSIGN exp

   26 id: ID

   27 lvalue: id lvalue_ext

   28 lvalue_ext: /* empty */
   29           | LBRACK exp RBRACK lvalue_ext

   30 expseq: /* empty */
   31       | expseq1

   32 expseq1: exp
   33        | exp SEMICOLON expseq1

   34 decs: /* empty */
   35     | typedec decs
   36     | vardec decs

   37 vardec: VAR id ASSIGN exp
   38       | VAR id COLON id ASSIGN exp

   39 typedec: TYPE id EQ ty

   40 ty: ARRAY OF id


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 26
INT (259) 2
STRING (260) 3
COMMA (261)
COLON (262) 38
SEMICOLON (263) 33
LPAREN (264) 5
RPAREN (265) 5
LBRACK (266) 12 29
RBRACK (267) 12 29
LBRACE (268)
RBRACE (269)
DOT (270)
PLUS (271) 15
MINUS (272) 6 16
TIMES (273) 13
DIVIDE (274) 14
EQ (275) 17 39
NEQ (276) 18
LT (277) 19
LE (278) 20
GT (279) 21
GE (280) 22
AND (281) 23
OR (282) 24
ASSIGN (283) 10 25 37 38
ARRAY (284) 40
IF (285) 7 8
THEN (286) 7 8
ELSE (287) 8
WHILE (288) 9
FOR (289) 10
TO (290) 10
DO (291) 9 10
LET (292) 11
IN (293) 11
END (294) 11
OF (295) 12 40
VAR (296) 37 38
TYPE (297) 39


Nonterminals, with rules where they appear

$accept (43)
    on left: 0
program (44)
    on left: 1, on right: 0
exp (45)
    on left: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
    23 24 25, on right: 1 6 7 8 9 10 12 13 14 15 16 17 18 19 20 21
    22 23 24 25 29 32 33 37 38
id (46)
    on left: 26, on right: 10 12 27 37 38 39 40
lvalue (47)
    on left: 27, on right: 4 25
lvalue_ext (48)
    on left: 28 29, on right: 27 29
expseq (49)
    on left: 30 31, on right: 5 11
expseq1 (50)
    on left: 32 33, on right: 31 33
decs (51)
    on left: 34 35 36, on right: 11 35 36
vardec (52)
    on left: 37 38, on right: 36
typedec (53)
    on left: 39, on right: 35
ty (54)
    on left: 40, on right: 39


state 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9

    program  go to state 10
    exp      go to state 11
    id       go to state 12
    lvalue   go to state 13


state 1

   26 id: ID .

    $default  reduce using rule 26 (id)


state 2

    2 exp: INT .

    $default  reduce using rule 2 (exp)


state 3

    3 exp: STRING .

    $default  reduce using rule 3 (exp)


state 4

    5 exp: LPAREN . expseq RPAREN

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9

    $default  reduce using rule 30 (expseq)

    exp      go to state 14
    id       go to state 12
    lvalue   go to state 13
    expseq   go to state 15
    expseq1  go to state 16


state 5

    6 exp: MINUS . exp

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9

    exp     go to state 17
    id      go to state 12
    lvalue  go to state 13


state 6

    7 exp: IF . exp THEN exp
    8    | IF . exp THEN exp ELSE exp

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9

    exp     go to state 18
    id      go to state 12
    lvalue  go to state 13


state 7

    9 exp: WHILE . exp DO exp

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9

    exp     go to state 19
    id      go to state 12
    lvalue  go to state 13


state 8

   10 exp: FOR . id ASSIGN exp TO exp DO exp

    ID  shift, and go to state 1

    id  go to state 20


state 9

   11 exp: LET . decs IN expseq END

    VAR   shift, and go to state 21
    TYPE  shift, and go to state 22

    $default  reduce using rule 34 (decs)

    decs     go to state 23
    vardec   go to state 24
    typedec  go to state 25


state 10

    0 $accept: program . $end

    $end  shift, and go to state 26


state 11

    1 program: exp .
   13 exp: exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . PLUS exp
   16    | exp . MINUS exp
   17    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . LT exp
   20    | exp . LE exp
   21    | exp . GT exp
   22    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp

    PLUS    shift, and go to state 27
    MINUS   shift, and go to state 28
    TIMES   shift, and go to state 29
    DIVIDE  shift, and go to state 30
    EQ      shift, and go to state 31
    NEQ     shift, and go to state 32
    LT      shift, and go to state 33
    LE      shift, and go to state 34
    GT      shift, and go to state 35
    GE      shift, and go to state 36
    AND     shift, and go to state 37
    OR      shift, and go to state 38

    $default  reduce using rule 1 (program)


state 12

   12 exp: id . LBRACK exp RBRACK OF exp
   27 lvalue: id . lvalue_ext

    LBRACK  shift, and go to state 39

    $default  reduce using rule 28 (lvalue_ext)

    lvalue_ext  go to state 40


state 13

    4 exp: lvalue .
   25    | lvalue . ASSIGN exp

    ASSIGN  shift, and go to state 41

    $default  reduce using rule 4 (exp)


state 14

   13 exp: exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . PLUS exp
   16    | exp . MINUS exp
   17    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . LT exp
   20    | exp . LE exp
   21    | exp . GT exp
   22    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp
   32 expseq1: exp .
   33        | exp . SEMICOLON expseq1

    SEMICOLON  shift, and go to state 42
    PLUS       shift, and go to state 27
    MINUS      shift, and go to state 28
    TIMES      shift, and go to state 29
    DIVIDE     shift, and go to state 30
    EQ         shift, and go to state 31
    NEQ        shift, and go to state 32
    LT         shift, and go to state 33
    LE         shift, and go to state 34
    GT         shift, and go to state 35
    GE         shift, and go to state 36
    AND        shift, and go to state 37
    OR         shift, and go to state 38

    $default  reduce using rule 32 (expseq1)


state 15

    5 exp: LPAREN expseq . RPAREN

    RPAREN  shift, and go to state 43


state 16

   31 expseq: expseq1 .

    $default  reduce using rule 31 (expseq)


state 17

    6 exp: MINUS exp .
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . PLUS exp
   16    | exp . MINUS exp
   17    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . LT exp
   20    | exp . LE exp
   21    | exp . GT exp
   22    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp

    TIMES   shift, and go to state 29
    DIVIDE  shift, and go to state 30

    $default  reduce using rule 6 (exp)


state 18

    7 exp: IF exp . THEN exp
    8    | IF exp . THEN exp ELSE exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . PLUS exp
   16    | exp . MINUS exp
   17    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . LT exp
   20    | exp . LE exp
   21    | exp . GT exp
   22    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp

    PLUS    shift, and go to state 27
    MINUS   shift, and go to state 28
    TIMES   shift, and go to state 29
    DIVIDE  shift, and go to state 30
    EQ      shift, and go to state 31
    NEQ     shift, and go to state 32
    LT      shift, and go to state 33
    LE      shift, and go to state 34
    GT      shift, and go to state 35
    GE      shift, and go to state 36
    AND     shift, and go to state 37
    OR      shift, and go to state 38
    THEN    shift, and go to state 44


state 19

    9 exp: WHILE exp . DO exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . PLUS exp
   16    | exp . MINUS exp
   17    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . LT exp
   20    | exp . LE exp
   21    | exp . GT exp
   22    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp

    PLUS    shift, and go to state 27
    MINUS   shift, and go to state 28
    TIMES   shift, and go to state 29
    DIVIDE  shift, and go to state 30
    EQ      shift, and go to state 31
    NEQ     shift, and go to state 32
    LT      shift, and go to state 33
    LE      shift, and go to state 34
    GT      shift, and go to state 35
    GE      shift, and go to state 36
    AND     shift, and go to state 37
    OR      shift, and go to state 38
    DO      shift, and go to state 45


state 20

   10 exp: FOR id . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 46


state 21

   37 vardec: VAR . id ASSIGN exp
   38       | VAR . id COLON id ASSIGN exp

    ID  shift, and go to state 1

    id  go to state 47


state 22

   39 typedec: TYPE . id EQ ty

    ID  shift, and go to state 1

    id  go to state 48


state 23

   11 exp: LET decs . IN expseq END

    IN  shift, and go to state 49


state 24

   36 decs: vardec . decs

    VAR   shift, and go to state 21
    TYPE  shift, and go to state 22

    $default  reduce using rule 34 (decs)

    decs     go to state 50
    vardec   go to state 24
    typedec  go to state 25


state 25

   35 decs: typedec . decs

    VAR   shift, and go to state 21
    TYPE  shift, and go to state 22

    $default  reduce using rule 34 (decs)

    decs     go to state 51
    vardec   go to state 24
    typedec  go to state 25


state 26

    0 $accept: program $end .

    $default  accept


state 27

   15 exp: exp PLUS . exp

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9

    exp     go to state 52
    id      go to state 12
    lvalue  go to state 13


state 28

   16 exp: exp MINUS . exp

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9

    exp     go to state 53
    id      go to state 12
    lvalue  go to state 13


state 29

   13 exp: exp TIMES . exp

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9

    exp     go to state 54
    id      go to state 12
    lvalue  go to state 13


state 30

   14 exp: exp DIVIDE . exp

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9

    exp     go to state 55
    id      go to state 12
    lvalue  go to state 13


state 31

   17 exp: exp EQ . exp

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9

    exp     go to state 56
    id      go to state 12
    lvalue  go to state 13


state 32

   18 exp: exp NEQ . exp

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9

    exp     go to state 57
    id      go to state 12
    lvalue  go to state 13


state 33

   19 exp: exp LT . exp

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9

    exp     go to state 58
    id      go to state 12
    lvalue  go to state 13


state 34

   20 exp: exp LE . exp

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9

    exp     go to state 59
    id      go to state 12
    lvalue  go to state 13


state 35

   21 exp: exp GT . exp

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9

    exp     go to state 60
    id      go to state 12
    lvalue  go to state 13


state 36

   22 exp: exp GE . exp

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9

    exp     go to state 61
    id      go to state 12
    lvalue  go to state 13


state 37

   23 exp: exp AND . exp

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9

    exp     go to state 62
    id      go to state 12
    lvalue  go to state 13


state 38

   24 exp: exp OR . exp

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9

    exp     go to state 63
    id      go to state 12
    lvalue  go to state 13


state 39

   12 exp: id LBRACK . exp RBRACK OF exp
   29 lvalue_ext: LBRACK . exp RBRACK lvalue_ext

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9

    exp     go to state 64
    id      go to state 12
    lvalue  go to state 13


state 40

   27 lvalue: id lvalue_ext .

    $default  reduce using rule 27 (lvalue)


state 41

   25 exp: lvalue ASSIGN . exp

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9

    exp     go to state 65
    id      go to state 12
    lvalue  go to state 13


state 42

   33 expseq1: exp SEMICOLON . expseq1

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9

    exp      go to state 14
    id       go to state 12
    lvalue   go to state 13
    expseq1  go to state 66


state 43

    5 exp: LPAREN expseq RPAREN .

    $default  reduce using rule 5 (exp)


state 44

    7 exp: IF exp THEN . exp
    8    | IF exp THEN . exp ELSE exp

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9

    exp     go to state 67
    id      go to state 12
    lvalue  go to state 13


state 45

    9 exp: WHILE exp DO . exp

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9

    exp     go to state 68
    id      go to state 12
    lvalue  go to state 13


state 46

   10 exp: FOR id ASSIGN . exp TO exp DO exp

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9

    exp     go to state 69
    id      go to state 12
    lvalue  go to state 13


state 47

   37 vardec: VAR id . ASSIGN exp
   38       | VAR id . COLON id ASSIGN exp

    COLON   shift, and go to state 70
    ASSIGN  shift, and go to state 71


state 48

   39 typedec: TYPE id . EQ ty

    EQ  shift, and go to state 72


state 49

   11 exp: LET decs IN . expseq END

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9

    $default  reduce using rule 30 (expseq)

    exp      go to state 14
    id       go to state 12
    lvalue   go to state 13
    expseq   go to state 73
    expseq1  go to state 16


state 50

   36 decs: vardec decs .

    $default  reduce using rule 36 (decs)


state 51

   35 decs: typedec decs .

    $default  reduce using rule 35 (decs)


state 52

   13 exp: exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . PLUS exp
   15    | exp PLUS exp .
   16    | exp . MINUS exp
   17    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . LT exp
   20    | exp . LE exp
   21    | exp . GT exp
   22    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp

    TIMES   shift, and go to state 29
    DIVIDE  shift, and go to state 30

    $default  reduce using rule 15 (exp)


state 53

   13 exp: exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . PLUS exp
   16    | exp . MINUS exp
   16    | exp MINUS exp .
   17    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . LT exp
   20    | exp . LE exp
   21    | exp . GT exp
   22    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp

    TIMES   shift, and go to state 29
    DIVIDE  shift, and go to state 30

    $default  reduce using rule 16 (exp)


state 54

   13 exp: exp . TIMES exp
   13    | exp TIMES exp .
   14    | exp . DIVIDE exp
   15    | exp . PLUS exp
   16    | exp . MINUS exp
   17    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . LT exp
   20    | exp . LE exp
   21    | exp . GT exp
   22    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp

    $default  reduce using rule 13 (exp)


state 55

   13 exp: exp . TIMES exp
   14    | exp . DIVIDE exp
   14    | exp DIVIDE exp .
   15    | exp . PLUS exp
   16    | exp . MINUS exp
   17    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . LT exp
   20    | exp . LE exp
   21    | exp . GT exp
   22    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp

    $default  reduce using rule 14 (exp)


state 56

   13 exp: exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . PLUS exp
   16    | exp . MINUS exp
   17    | exp . EQ exp
   17    | exp EQ exp .
   18    | exp . NEQ exp
   19    | exp . LT exp
   20    | exp . LE exp
   21    | exp . GT exp
   22    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp

    PLUS    shift, and go to state 27
    MINUS   shift, and go to state 28
    TIMES   shift, and go to state 29
    DIVIDE  shift, and go to state 30

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 17 (exp)


state 57

   13 exp: exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . PLUS exp
   16    | exp . MINUS exp
   17    | exp . EQ exp
   18    | exp . NEQ exp
   18    | exp NEQ exp .
   19    | exp . LT exp
   20    | exp . LE exp
   21    | exp . GT exp
   22    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp

    PLUS    shift, and go to state 27
    MINUS   shift, and go to state 28
    TIMES   shift, and go to state 29
    DIVIDE  shift, and go to state 30

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 18 (exp)


state 58

   13 exp: exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . PLUS exp
   16    | exp . MINUS exp
   17    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . LT exp
   19    | exp LT exp .
   20    | exp . LE exp
   21    | exp . GT exp
   22    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp

    PLUS    shift, and go to state 27
    MINUS   shift, and go to state 28
    TIMES   shift, and go to state 29
    DIVIDE  shift, and go to state 30

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 19 (exp)


state 59

   13 exp: exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . PLUS exp
   16    | exp . MINUS exp
   17    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . LT exp
   20    | exp . LE exp
   20    | exp LE exp .
   21    | exp . GT exp
   22    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp

    PLUS    shift, and go to state 27
    MINUS   shift, and go to state 28
    TIMES   shift, and go to state 29
    DIVIDE  shift, and go to state 30

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 20 (exp)


state 60

   13 exp: exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . PLUS exp
   16    | exp . MINUS exp
   17    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . LT exp
   20    | exp . LE exp
   21    | exp . GT exp
   21    | exp GT exp .
   22    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp

    PLUS    shift, and go to state 27
    MINUS   shift, and go to state 28
    TIMES   shift, and go to state 29
    DIVIDE  shift, and go to state 30

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 21 (exp)


state 61

   13 exp: exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . PLUS exp
   16    | exp . MINUS exp
   17    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . LT exp
   20    | exp . LE exp
   21    | exp . GT exp
   22    | exp . GE exp
   22    | exp GE exp .
   23    | exp . AND exp
   24    | exp . OR exp

    PLUS    shift, and go to state 27
    MINUS   shift, and go to state 28
    TIMES   shift, and go to state 29
    DIVIDE  shift, and go to state 30

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 22 (exp)


state 62

   13 exp: exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . PLUS exp
   16    | exp . MINUS exp
   17    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . LT exp
   20    | exp . LE exp
   21    | exp . GT exp
   22    | exp . GE exp
   23    | exp . AND exp
   23    | exp AND exp .
   24    | exp . OR exp

    PLUS    shift, and go to state 27
    MINUS   shift, and go to state 28
    TIMES   shift, and go to state 29
    DIVIDE  shift, and go to state 30
    EQ      shift, and go to state 31
    NEQ     shift, and go to state 32
    LT      shift, and go to state 33
    LE      shift, and go to state 34
    GT      shift, and go to state 35
    GE      shift, and go to state 36

    $default  reduce using rule 23 (exp)


state 63

   13 exp: exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . PLUS exp
   16    | exp . MINUS exp
   17    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . LT exp
   20    | exp . LE exp
   21    | exp . GT exp
   22    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp
   24    | exp OR exp .

    PLUS    shift, and go to state 27
    MINUS   shift, and go to state 28
    TIMES   shift, and go to state 29
    DIVIDE  shift, and go to state 30
    EQ      shift, and go to state 31
    NEQ     shift, and go to state 32
    LT      shift, and go to state 33
    LE      shift, and go to state 34
    GT      shift, and go to state 35
    GE      shift, and go to state 36

    $default  reduce using rule 24 (exp)


state 64

   12 exp: id LBRACK exp . RBRACK OF exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . PLUS exp
   16    | exp . MINUS exp
   17    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . LT exp
   20    | exp . LE exp
   21    | exp . GT exp
   22    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp
   29 lvalue_ext: LBRACK exp . RBRACK lvalue_ext

    RBRACK  shift, and go to state 74
    PLUS    shift, and go to state 27
    MINUS   shift, and go to state 28
    TIMES   shift, and go to state 29
    DIVIDE  shift, and go to state 30
    EQ      shift, and go to state 31
    NEQ     shift, and go to state 32
    LT      shift, and go to state 33
    LE      shift, and go to state 34
    GT      shift, and go to state 35
    GE      shift, and go to state 36
    AND     shift, and go to state 37
    OR      shift, and go to state 38


state 65

   13 exp: exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . PLUS exp
   16    | exp . MINUS exp
   17    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . LT exp
   20    | exp . LE exp
   21    | exp . GT exp
   22    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp
   25    | lvalue ASSIGN exp .

    PLUS    shift, and go to state 27
    MINUS   shift, and go to state 28
    TIMES   shift, and go to state 29
    DIVIDE  shift, and go to state 30
    EQ      shift, and go to state 31
    NEQ     shift, and go to state 32
    LT      shift, and go to state 33
    LE      shift, and go to state 34
    GT      shift, and go to state 35
    GE      shift, and go to state 36
    AND     shift, and go to state 37
    OR      shift, and go to state 38

    $default  reduce using rule 25 (exp)


state 66

   33 expseq1: exp SEMICOLON expseq1 .

    $default  reduce using rule 33 (expseq1)


state 67

    7 exp: IF exp THEN exp .
    8    | IF exp THEN exp . ELSE exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . PLUS exp
   16    | exp . MINUS exp
   17    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . LT exp
   20    | exp . LE exp
   21    | exp . GT exp
   22    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp

    PLUS    shift, and go to state 27
    MINUS   shift, and go to state 28
    TIMES   shift, and go to state 29
    DIVIDE  shift, and go to state 30
    EQ      shift, and go to state 31
    NEQ     shift, and go to state 32
    LT      shift, and go to state 33
    LE      shift, and go to state 34
    GT      shift, and go to state 35
    GE      shift, and go to state 36
    AND     shift, and go to state 37
    OR      shift, and go to state 38
    ELSE    shift, and go to state 75

    $default  reduce using rule 7 (exp)


state 68

    9 exp: WHILE exp DO exp .
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . PLUS exp
   16    | exp . MINUS exp
   17    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . LT exp
   20    | exp . LE exp
   21    | exp . GT exp
   22    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp

    PLUS    shift, and go to state 27
    MINUS   shift, and go to state 28
    TIMES   shift, and go to state 29
    DIVIDE  shift, and go to state 30
    EQ      shift, and go to state 31
    NEQ     shift, and go to state 32
    LT      shift, and go to state 33
    LE      shift, and go to state 34
    GT      shift, and go to state 35
    GE      shift, and go to state 36
    AND     shift, and go to state 37
    OR      shift, and go to state 38

    $default  reduce using rule 9 (exp)


state 69

   10 exp: FOR id ASSIGN exp . TO exp DO exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . PLUS exp
   16    | exp . MINUS exp
   17    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . LT exp
   20    | exp . LE exp
   21    | exp . GT exp
   22    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp

    PLUS    shift, and go to state 27
    MINUS   shift, and go to state 28
    TIMES   shift, and go to state 29
    DIVIDE  shift, and go to state 30
    EQ      shift, and go to state 31
    NEQ     shift, and go to state 32
    LT      shift, and go to state 33
    LE      shift, and go to state 34
    GT      shift, and go to state 35
    GE      shift, and go to state 36
    AND     shift, and go to state 37
    OR      shift, and go to state 38
    TO      shift, and go to state 76


state 70

   38 vardec: VAR id COLON . id ASSIGN exp

    ID  shift, and go to state 1

    id  go to state 77


state 71

   37 vardec: VAR id ASSIGN . exp

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9

    exp     go to state 78
    id      go to state 12
    lvalue  go to state 13


state 72

   39 typedec: TYPE id EQ . ty

    ARRAY  shift, and go to state 79

    ty  go to state 80


state 73

   11 exp: LET decs IN expseq . END

    END  shift, and go to state 81


state 74

   12 exp: id LBRACK exp RBRACK . OF exp
   29 lvalue_ext: LBRACK exp RBRACK . lvalue_ext

    LBRACK  shift, and go to state 82
    OF      shift, and go to state 83

    $default  reduce using rule 28 (lvalue_ext)

    lvalue_ext  go to state 84


state 75

    8 exp: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9

    exp     go to state 85
    id      go to state 12
    lvalue  go to state 13


state 76

   10 exp: FOR id ASSIGN exp TO . exp DO exp

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9

    exp     go to state 86
    id      go to state 12
    lvalue  go to state 13


state 77

   38 vardec: VAR id COLON id . ASSIGN exp

    ASSIGN  shift, and go to state 87


state 78

   13 exp: exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . PLUS exp
   16    | exp . MINUS exp
   17    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . LT exp
   20    | exp . LE exp
   21    | exp . GT exp
   22    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp
   37 vardec: VAR id ASSIGN exp .

    PLUS    shift, and go to state 27
    MINUS   shift, and go to state 28
    TIMES   shift, and go to state 29
    DIVIDE  shift, and go to state 30
    EQ      shift, and go to state 31
    NEQ     shift, and go to state 32
    LT      shift, and go to state 33
    LE      shift, and go to state 34
    GT      shift, and go to state 35
    GE      shift, and go to state 36
    AND     shift, and go to state 37
    OR      shift, and go to state 38

    $default  reduce using rule 37 (vardec)


state 79

   40 ty: ARRAY . OF id

    OF  shift, and go to state 88


state 80

   39 typedec: TYPE id EQ ty .

    $default  reduce using rule 39 (typedec)


state 81

   11 exp: LET decs IN expseq END .

    $default  reduce using rule 11 (exp)


state 82

   29 lvalue_ext: LBRACK . exp RBRACK lvalue_ext

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9

    exp     go to state 89
    id      go to state 12
    lvalue  go to state 13


state 83

   12 exp: id LBRACK exp RBRACK OF . exp

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9

    exp     go to state 90
    id      go to state 12
    lvalue  go to state 13


state 84

   29 lvalue_ext: LBRACK exp RBRACK lvalue_ext .

    $default  reduce using rule 29 (lvalue_ext)


state 85

    8 exp: IF exp THEN exp ELSE exp .
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . PLUS exp
   16    | exp . MINUS exp
   17    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . LT exp
   20    | exp . LE exp
   21    | exp . GT exp
   22    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp

    PLUS    shift, and go to state 27
    MINUS   shift, and go to state 28
    TIMES   shift, and go to state 29
    DIVIDE  shift, and go to state 30
    EQ      shift, and go to state 31
    NEQ     shift, and go to state 32
    LT      shift, and go to state 33
    LE      shift, and go to state 34
    GT      shift, and go to state 35
    GE      shift, and go to state 36
    AND     shift, and go to state 37
    OR      shift, and go to state 38

    $default  reduce using rule 8 (exp)


state 86

   10 exp: FOR id ASSIGN exp TO exp . DO exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . PLUS exp
   16    | exp . MINUS exp
   17    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . LT exp
   20    | exp . LE exp
   21    | exp . GT exp
   22    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp

    PLUS    shift, and go to state 27
    MINUS   shift, and go to state 28
    TIMES   shift, and go to state 29
    DIVIDE  shift, and go to state 30
    EQ      shift, and go to state 31
    NEQ     shift, and go to state 32
    LT      shift, and go to state 33
    LE      shift, and go to state 34
    GT      shift, and go to state 35
    GE      shift, and go to state 36
    AND     shift, and go to state 37
    OR      shift, and go to state 38
    DO      shift, and go to state 91


state 87

   38 vardec: VAR id COLON id ASSIGN . exp

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9

    exp     go to state 92
    id      go to state 12
    lvalue  go to state 13


state 88

   40 ty: ARRAY OF . id

    ID  shift, and go to state 1

    id  go to state 93


state 89

   13 exp: exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . PLUS exp
   16    | exp . MINUS exp
   17    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . LT exp
   20    | exp . LE exp
   21    | exp . GT exp
   22    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp
   29 lvalue_ext: LBRACK exp . RBRACK lvalue_ext

    RBRACK  shift, and go to state 94
    PLUS    shift, and go to state 27
    MINUS   shift, and go to state 28
    TIMES   shift, and go to state 29
    DIVIDE  shift, and go to state 30
    EQ      shift, and go to state 31
    NEQ     shift, and go to state 32
    LT      shift, and go to state 33
    LE      shift, and go to state 34
    GT      shift, and go to state 35
    GE      shift, and go to state 36
    AND     shift, and go to state 37
    OR      shift, and go to state 38


state 90

   12 exp: id LBRACK exp RBRACK OF exp .
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . PLUS exp
   16    | exp . MINUS exp
   17    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . LT exp
   20    | exp . LE exp
   21    | exp . GT exp
   22    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp

    PLUS    shift, and go to state 27
    MINUS   shift, and go to state 28
    TIMES   shift, and go to state 29
    DIVIDE  shift, and go to state 30
    EQ      shift, and go to state 31
    NEQ     shift, and go to state 32
    LT      shift, and go to state 33
    LE      shift, and go to state 34
    GT      shift, and go to state 35
    GE      shift, and go to state 36
    AND     shift, and go to state 37
    OR      shift, and go to state 38

    $default  reduce using rule 12 (exp)


state 91

   10 exp: FOR id ASSIGN exp TO exp DO . exp

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9

    exp     go to state 95
    id      go to state 12
    lvalue  go to state 13


state 92

   13 exp: exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . PLUS exp
   16    | exp . MINUS exp
   17    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . LT exp
   20    | exp . LE exp
   21    | exp . GT exp
   22    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp
   38 vardec: VAR id COLON id ASSIGN exp .

    PLUS    shift, and go to state 27
    MINUS   shift, and go to state 28
    TIMES   shift, and go to state 29
    DIVIDE  shift, and go to state 30
    EQ      shift, and go to state 31
    NEQ     shift, and go to state 32
    LT      shift, and go to state 33
    LE      shift, and go to state 34
    GT      shift, and go to state 35
    GE      shift, and go to state 36
    AND     shift, and go to state 37
    OR      shift, and go to state 38

    $default  reduce using rule 38 (vardec)


state 93

   40 ty: ARRAY OF id .

    $default  reduce using rule 40 (ty)


state 94

   29 lvalue_ext: LBRACK exp RBRACK . lvalue_ext

    LBRACK  shift, and go to state 82

    $default  reduce using rule 28 (lvalue_ext)

    lvalue_ext  go to state 84


state 95

   10 exp: FOR id ASSIGN exp TO exp DO exp .
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . PLUS exp
   16    | exp . MINUS exp
   17    | exp . EQ exp
   18    | exp . NEQ exp
   19    | exp . LT exp
   20    | exp . LE exp
   21    | exp . GT exp
   22    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp

    PLUS    shift, and go to state 27
    MINUS   shift, and go to state 28
    TIMES   shift, and go to state 29
    DIVIDE  shift, and go to state 30
    EQ      shift, and go to state 31
    NEQ     shift, and go to state 32
    LT      shift, and go to state 33
    LE      shift, and go to state 34
    GT      shift, and go to state 35
    GE      shift, and go to state 36
    AND     shift, and go to state 37
    OR      shift, and go to state 38

    $default  reduce using rule 10 (exp)
